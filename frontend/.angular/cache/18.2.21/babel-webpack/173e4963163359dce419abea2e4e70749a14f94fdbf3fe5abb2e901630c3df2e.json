{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../core/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction ProfileComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\nfunction ProfileComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nexport let ProfileComponent = /*#__PURE__*/(() => {\n  class ProfileComponent {\n    fb;\n    auth;\n    router;\n    form;\n    saving = false;\n    message = null;\n    error = null;\n    constructor(fb, auth, router) {\n      this.fb = fb;\n      this.auth = auth;\n      this.router = router;\n      this.form = this.fb.group({\n        firstName: ['', [Validators.required, Validators.maxLength(100)]],\n        lastName: ['', [Validators.maxLength(100)]],\n        email: ['', [Validators.required, Validators.email]],\n        phone: ['', [Validators.pattern(/^\\d{10}$/)]],\n        dob: [''],\n        addressLine1: ['', [Validators.maxLength(255)]],\n        addressLine2: ['', [Validators.maxLength(255)]],\n        city: ['', [Validators.maxLength(100)]],\n        state: ['', [Validators.maxLength(100)]],\n        postalCode: ['', [Validators.maxLength(20)]],\n        country: ['', [Validators.maxLength(100)]]\n      });\n    }\n    ngOnInit() {\n      const c = this.auth.getCurrentCustomer();\n      if (!c) {\n        this.router.navigate(['/login']);\n        return;\n      }\n      this.form.patchValue(c);\n    }\n    submit() {\n      this.message = null;\n      this.error = null;\n      if (this.form.invalid) {\n        this.form.markAllAsTouched();\n        return;\n      }\n      const c = this.auth.getCurrentCustomer();\n      if (!c) {\n        this.error = 'Not logged in';\n        return;\n      }\n      const payload = {};\n      Object.entries(this.form.value).forEach(([k, v]) => {\n        if (v !== null && v !== '' && v !== undefined) payload[k] = v;\n      });\n      this.saving = true;\n      this.auth.updateProfile(c.id, payload).subscribe({\n        next: updated => {\n          this.saving = false;\n          this.message = 'Profile updated';\n          this.form.patchValue(updated);\n        },\n        error: err => {\n          this.saving = false;\n          this.error = err?.error?.message || 'Update failed';\n        }\n      });\n    }\n    static ɵfac = function ProfileComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ProfileComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProfileComponent,\n      selectors: [[\"app-profile\"]],\n      decls: 46,\n      vars: 5,\n      consts: [[1, \"profile-page\"], [\"class\", \"msg success\", 4, \"ngIf\"], [\"class\", \"msg error\", 4, \"ngIf\"], [\"novalidate\", \"\", 1, \"profile-form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"grid-2\"], [\"formControlName\", \"firstName\", \"type\", \"text\"], [\"formControlName\", \"lastName\", \"type\", \"text\"], [\"formControlName\", \"email\", \"type\", \"email\"], [\"formControlName\", \"phone\", \"type\", \"text\", \"maxlength\", \"10\"], [\"formControlName\", \"dob\", \"type\", \"date\"], [\"formControlName\", \"addressLine1\", \"type\", \"text\"], [\"formControlName\", \"addressLine2\", \"type\", \"text\"], [\"formControlName\", \"city\", \"type\", \"text\"], [\"formControlName\", \"state\", \"type\", \"text\"], [\"formControlName\", \"postalCode\", \"type\", \"text\"], [\"formControlName\", \"country\", \"type\", \"text\"], [1, \"actions\"], [\"type\", \"submit\", 1, \"primary\", 3, \"disabled\"], [\"type\", \"button\", \"routerLink\", \"/dashboard\", 1, \"ghost\"], [1, \"msg\", \"success\"], [1, \"msg\", \"error\"]],\n      template: function ProfileComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"Your Profile\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, ProfileComponent_div_3_Template, 2, 1, \"div\", 1)(4, ProfileComponent_div_4_Template, 2, 1, \"div\", 2);\n          i0.ɵɵelementStart(5, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function ProfileComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.submit();\n          });\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\");\n          i0.ɵɵtext(8, \"First Name \");\n          i0.ɵɵelement(9, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"label\");\n          i0.ɵɵtext(11, \"Last Name \");\n          i0.ɵɵelement(12, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"label\");\n          i0.ɵɵtext(14, \"Email \");\n          i0.ɵɵelement(15, \"input\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"label\");\n          i0.ɵɵtext(17, \"Phone \");\n          i0.ɵɵelement(18, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"label\");\n          i0.ɵɵtext(20, \"Date of Birth \");\n          i0.ɵɵelement(21, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"div\");\n          i0.ɵɵelementStart(23, \"label\");\n          i0.ɵɵtext(24, \"Address Line 1 \");\n          i0.ɵɵelement(25, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"label\");\n          i0.ɵɵtext(27, \"Address Line 2 \");\n          i0.ɵɵelement(28, \"input\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"label\");\n          i0.ɵɵtext(30, \"City \");\n          i0.ɵɵelement(31, \"input\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"label\");\n          i0.ɵɵtext(33, \"State \");\n          i0.ɵɵelement(34, \"input\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"label\");\n          i0.ɵɵtext(36, \"Postal Code \");\n          i0.ɵɵelement(37, \"input\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"label\");\n          i0.ɵɵtext(39, \"Country \");\n          i0.ɵɵelement(40, \"input\", 15);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(41, \"div\", 16)(42, \"button\", 17);\n          i0.ɵɵtext(43);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"button\", 18);\n          i0.ɵɵtext(45, \"Back\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.message);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(37);\n          i0.ɵɵproperty(\"disabled\", ctx.saving);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate(ctx.saving ? \"Saving...\" : \"Save Changes\");\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink],\n      styles: [\".profile-page[_ngcontent-%COMP%]{max-width:860px;margin:0 auto;padding:1rem}.profile-page[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{margin-bottom:1rem}.profile-form[_ngcontent-%COMP%]   .grid-2[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fill,minmax(240px,1fr));gap:1rem}.profile-form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:flex;flex-direction:column;font-size:.85rem;gap:.25rem}.profile-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding:.45rem .5rem;border:1px solid #ccc;border-radius:4px}.actions[_ngcontent-%COMP%]{margin-top:1.5rem;display:flex;gap:.75rem}button.primary[_ngcontent-%COMP%]{background:#2563eb;color:#fff;border:none;padding:.6rem 1rem;border-radius:4px;cursor:pointer}button.primary[_ngcontent-%COMP%]:disabled{opacity:.6;cursor:default}button.ghost[_ngcontent-%COMP%]{background:transparent;border:1px solid #777;padding:.55rem 1rem;border-radius:4px}.msg[_ngcontent-%COMP%]{margin-bottom:.75rem;padding:.5rem .75rem;border-radius:4px;font-size:.85rem}.msg.success[_ngcontent-%COMP%]{background:#e0f9ec;color:#066642}.msg.error[_ngcontent-%COMP%]{background:#fde2e1;color:#7a1210}\"]\n    });\n  }\n  return ProfileComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}