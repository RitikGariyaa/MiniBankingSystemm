{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    http;\n    base = environment.apiBase;\n    tokenKey = 'jwt_token';\n    customer$ = new BehaviorSubject(null);\n    customerChanges$ = this.customer$.asObservable();\n    constructor(http) {\n      this.http = http;\n      const token = this.getToken();\n      if (token) {\n        this.refreshProfile().subscribe();\n      }\n    }\n    login(email, password) {\n      return this.http.post(`${this.base}/api/auth/login`, {\n        email,\n        password\n      }).pipe(tap(r => {\n        this.storeToken(r.token);\n        this.customer$.next(r.customer);\n      }));\n    }\n    register(payload) {\n      return this.http.post(`${this.base}/api/customers`, payload);\n    }\n    refreshProfile() {\n      return this.http.get(`${this.base}/api/me`).pipe(tap(c => this.customer$.next(c)));\n    }\n    listAccounts() {\n      return this.http.get(`${this.base}/api/me/accounts`);\n    }\n    getAccount(id) {\n      return this.http.get(`${this.base}/api/accounts/${id}`);\n    }\n    getTransactions(id) {\n      return this.http.get(`${this.base}/api/accounts/${id}/transactions`);\n    }\n    deposit(id, amount, note) {\n      return this.http.post(`${this.base}/api/accounts/${id}/deposit`, {\n        amount,\n        note\n      });\n    }\n    withdraw(id, amount, note) {\n      return this.http.post(`${this.base}/api/accounts/${id}/withdraw`, {\n        amount,\n        note\n      });\n    }\n    transfer(fromAccountId, toAccountId, amount, note) {\n      return this.http.post(`${this.base}/api/accounts/transfer`, {\n        fromAccountId,\n        toAccountId,\n        amount,\n        note\n      });\n    }\n    logout() {\n      localStorage.removeItem(this.tokenKey);\n      this.customer$.next(null);\n    }\n    isLoggedIn() {\n      return !!this.getToken();\n    }\n    getToken() {\n      return localStorage.getItem(this.tokenKey);\n    }\n    storeToken(t) {\n      localStorage.setItem(this.tokenKey, t);\n    }\n    getCurrentCustomer() {\n      return this.customer$.value;\n    }\n    createAccount(payload) {\n      return this.http.post(`${this.base}/api/accounts`, payload);\n    }\n    static ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}